@page "/SendRejseplan"
@rendermode InteractiveServer
@using System.IO;
@using QuestPDF.Fluent;
@using QuestPDF.Drawing;
@using QuestPDF.Infrastructure;
@using System.Net.Http.Json;
@using TANA.Application.DTOs
@using TANA.Infrastructure.Services;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Language> L

<h3>@L["SendItinerary"]</h3>

<div class="form-group">
    <label>@L["Name"]:</label>
    <input class="form-control" @bind="navn" />

    <label>@L["Email"]:</label>
    <input class="form-control" @bind="email" />

    <label>@L["TravelPlanDestination"]:</label>
    <input class="form-control" @bind="destination" />

    <label>@L["Departure"]:</label>
    <input class="form-control" @bind="afrejse" />

    <label>@L["Return"]:</label>
    <input class="form-control" @bind="hjemrejse" />

    <label>@L["Airline"]:</label>
    <input class="form-control" @bind="flyselskab" />
</div>

<button class="btn btn-primary" @onclick="GeneratePdf">@L["CreatePDF"]</button>

@code {
    [Inject] IJSRuntime JS { get; set; }  // Inject JSRuntime for at åbne PDF i et nyt vindue

        private string navn, email, destination, afrejse, hjemrejse, flyselskab;

    private async Task GeneratePdf()
    {
        try
        {
            var model = new RejseplanModel
            {
                Navn = navn,
                Email = email,
                Destination = destination,
                Afrejse = afrejse,
                Hjemrejse = hjemrejse,
                Flyselskab = flyselskab
            };

            var api = ClientFactory.CreateClient("TanaApi");
            var response = await api.PostAsJsonAsync("api/pdf/rejseplan", model);

            if (response.IsSuccessStatusCode)
            {
                var pdfBytes = await response.Content.ReadAsByteArrayAsync();
                var base64 = Convert.ToBase64String(pdfBytes);
                var pdfDataUrl = $"data:application/pdf;base64,{base64}";
                await JS.InvokeVoidAsync("open", pdfDataUrl, "_blank");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Console.WriteLine("Fejl fra API: " + error);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Fejl ved PDF-generering: " + ex.Message);
        }
    }

}
