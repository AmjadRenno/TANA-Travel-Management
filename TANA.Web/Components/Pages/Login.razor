@page "/login"
@using System.ComponentModel.DataAnnotations
@using TANA.Application.Interface
@inject NavigationManager NavigationManager
@inject IBrugerService BrugerService
@using BCrypt.Net
@rendermode InteractiveServer
@inject AuthenticationStateProvider AuthenticationStateProvider
@using TANA.Web.Authentication
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Language> L

<h3>@L["Login"]</h3>
<div>
    Test admin login.
</div>
<div>
    Email: admin@admin.dk
</div>
<div>
    Kodeord: 1234
</div>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" formname="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>@L["Email"]</label>
        <InputText @bind-Value="loginModel.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label>@L["Password"]</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>

    <button class="btn btn-primary">@L["Login"]</button>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string? ErrorMessage;

    private async Task HandleLogin()
    {
        var allUsers = await BrugerService.GetAllAsync();
        var bruger = allUsers.FirstOrDefault(u =>
            u.Email == loginModel.Email &&
            (BCrypt.Verify(loginModel.Password, u.PasswordHash)));

        if (bruger is not null)
        {
            var sessionAuth = (SessionAuthenticationStateProvider)AuthenticationStateProvider;

            await sessionAuth.MarkUserAsAuthenticated(bruger);

            NavigationManager.NavigateTo(bruger.Rolle == "Admin" ? "/rejser" : "/modify-email");
        }
        else
        {
            ErrorMessage = @L["WrongCredentials"];
        }
    }

    public class LoginModel
    {
        [Required]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }
}
